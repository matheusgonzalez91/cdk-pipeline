AWSTemplateFormatVersion: '2010-09-09'
Resources:
  PipelineArtifactBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-PipelineArtifactBucket'
      RemovalPolicy: 'Delete'
  
  GlueScriptsBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub '${AWS::StackName}-GlueScriptsBucket'
      RemovalPolicy: 'Retain'

  PipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'codepipeline.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'PipelinePolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action: 'secretsmanager:GetSecretValue'
                Resource: !Sub 'arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:AWS_GITHUB_TOKEN-*'

  Pipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      ArtifactStore:
        Type: 'S3'
        Location: !Ref PipelineArtifactBucket
      RoleArn: !GetAtt PipelineRole.Arn
      Stages:
        - Name: 'Source'
          Actions:
            - Name: 'GitHub_Source'
              ActionTypeId:
                Category: 'Source'
                Owner: 'ThirdParty'
                Version: '1'
                Provider: 'GitHub'
              Configuration:
                Owner: 'matheusgonzalez91'
                Repo: 'prontuario-cdk'
                Branch: 'main'
                OAuthToken: !Sub '{{resolve:secretsmanager:AWS_GITHUB_TOKEN}}'
              OutputArtifacts:
                - Name: 'SourceOutput'
        - Name: 'Build'
          Actions:
            - Name: 'CDK_Build'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              Configuration:
                ProjectName: !Ref CdkBuildProject
              InputArtifacts:
                - Name: 'SourceOutput'
              OutputArtifacts:
                - Name: 'CdkBuildOutput'
            - Name: 'Glue_Script_Build'
              ActionTypeId:
                Category: 'Build'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CodeBuild'
              Configuration:
                ProjectName: !Ref GlueScriptBuildProject
              InputArtifacts:
                - Name: 'SourceOutput'
              OutputArtifacts:
                - Name: 'GlueScriptOutput'
        - Name: 'Deploy'
          Actions:
            - Name: 'CFN_Deploy'
              ActionTypeId:
                Category: 'Deploy'
                Owner: 'AWS'
                Version: '1'
                Provider: 'CloudFormation'
              Configuration:
                StackName: 'MyAthenaUserStack'
                ActionMode: 'CREATE_UPDATE'
                Capabilities: 'CAPABILITY_AUTO_EXPAND'
                RoleArn: !GetAtt PipelineRole.Arn
              InputArtifacts:
                - Name: 'CdkBuildOutput'
              OutputArtifacts: []
      
  CdkBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: 'CdkBuildProject'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        Type: 'LINUX_CONTAINER'
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/standard:5.0'
      ServiceRole: !GetAtt PipelineRole.Arn
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: |
          version: '0.2'
          phases:
            install:
              commands:
                - 'npm install -g aws-cdk'
                - 'npm install'
            build:
              commands:
                - 'npx cdk synth'
          artifacts:
            base-directory: 'cdk.out'
            files:
              - 'MyAthenaUserStack.template.json'
  
  GlueScriptBuildProject:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: 'GlueScriptBuildProject'
      Artifacts:
        Type: 'CODEPIPELINE'
      Environment:
        Type: 'LINUX_CONTAINER'
        ComputeType: 'BUILD_GENERAL1_SMALL'
        Image: 'aws/codebuild/standard:5.0'
      ServiceRole: !GetAtt PipelineRole.Arn
      Source:
        Type: 'CODEPIPELINE'
        BuildSpec: |
          version: '0.2'
          phases:
            install:
              commands:
                - 'pip install awscli'
            build:
              commands:
                - 'aws s3 cp scripts/ s3://${GlueScriptsBucket.BucketName}/ --recursive'
          artifacts:
            base-directory: 'scripts'
            files:
              - '**/*'
